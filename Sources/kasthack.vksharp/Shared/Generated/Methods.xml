<?xml version="1.0"?>
<ArrayOfMethod xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Method Name="account.banUser" Type="void" NeedToken="true">
    <Doc>
      <Summary>Добавляет пользователя в черный список.Если указанный пользователь является другом текущего пользователя или имеет от него входящую или исходящую заявку в друзья, то для добавления пользователя в черный список Ваше приложение должно иметь права: friends.</Summary>
    </Doc>
    <Params>
      <Param Name="user_id" Type="int" Doc="Идентификатор пользователя, которого нужно добавить в черный список"/>
    </Params>
  </Method>
  <Method Name="account.changePassword" Type="ChangePassword" NeedToken="true">
    <Doc>
      <Summary>
        Позволяет сменить пароль пользователя после успешного восстановления доступа к аккаунту через СМС, используя метод auth.restore
      </Summary>
    </Doc>
    <Params>
      <Param Name="restore_sid" Type="string" Doc="Идентификатор сессии, полученный при восстановлении доступа используя метод auth.restore. (В случае если пароль меняется сразу после восстановления доступа)"/>
      <Param Name="change_password_hash" Type="string" Doc="Хэш, полученный при успешной OAuth авторизации по коду полученному по СМС (В случае если пароль меняется сразу после восстановления доступа)"/>
      <Param Name="old_password" Type="string" Doc="Текущий пароль пользователя" />
      <Param Name="new_password" Type="string" Doc="Новый пароль, который будет установлен в качестве текущего"/>
    </Params>
  </Method>
  <Method Name="account.getActiveOffers" Type="EntityList&lt;Offer&gt;" NeedToken="false" Pageable="100" >
    <Doc>
      <Summary>
        Возвращает список активных рекламных предложений (офферов), выполнив которые пользователь сможет получить соответствующее количество голосов на свой счёт внутри приложения
      </Summary>
    </Doc>
    <Params />
  </Method>
  <Method Name="account.getAppPermissions" Type="Permission" NeedToken="false" >
    <Doc>
      <Summary>
        Получает настройки текущего пользователя в данном приложении
      </Summary>
      <Returns>
        После успешного выполнения возвращает битовую маску настроек текущего пользователя в данном приложении
      </Returns>
    </Doc>
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="Идентификатор пользователя, информацию о настройках которого необходимо получить. По умолчанию — текущий пользователь"/>
    </Params>
  </Method>
  <Method Name="account.getBanned" Type="User[]" NeedToken="true" Pageable="20">
    <Doc>
    <Summary>
      Возвращает список пользователей, находящихся в черном списке
    </Summary>
    <Returns>
      Возвращает набор объектов пользователей, находящихся в черном списке
    </Returns>
    </Doc>
    <Params/>
  </Method>
  <!--<Method Name="account.getCounters" Type="ProfileCounters" NeedToken="true">
    <Params>
      <Param Name="filter" Type="CounterFields"></Param>
    </Params>
  </Method>-->
  <Method Name="account.getInfo" Type="AccountInfo" NeedToken="true" >
    <Doc>
      <Summary>
        Возвращает информацию о текущем аккаунте
      </Summary>
      <Returns>
        Возвращает объект AccountInfo
      </Returns>
    </Doc>
    <Params />
  </Method>
  <Method Name="account.saveProfileInfo" Type="SaveProfileInfo" NeedToken="true">
    <Doc>
      <Summary>
        Отменяет редактирование профиля
      </Summary>
    </Doc>
    <Params>
      <Param Name="cancel_request_id" Type="int" Doc="идентификатор заявки на смену имени, которую необходимо отменить"/>
    </Params>
  </Method>
  <Method Name="account.saveProfileInfo" Type="SaveProfileInfo" NeedToken="true">
    <Doc>
      <Summary>
        Редактирует информацию текущего профиля
      </Summary>
    </Doc>
    <Params>
      <Param Name="first_name" Type="string" Default="&quot;&quot;" Doc="имя пользователя"/>
      <Param Name="last_name" Type="string" Default="&quot;&quot;" Doc="фамилия пользователя."/>
      <Param Name="maiden_name" Type="string" Default="&quot;&quot;" Doc="девичья фамилия пользователя (только для женского пола)"/>
      <Param Name="screen_name" Type="string" Default="&quot;&quot;" Doc="короткое имя страницы"/>
      <Param Name="sex" Type="Sex?" Default="null" Doc="пол пользователя"/>
      <Param Name="relation" Type="Relation?" Default="null" Doc="семейное положение пользователя"/>
      <Param Name="relation_partner_id" Type="int?" Default="null" Doc="идентификатор пользователя, с которым связано семейное положение"/>
      <Param Name="bdate" Type="Date?" Default="null" Doc="дата рождения пользователя"/>
      <Param Name="home_town" Type="string" Default="&quot;&quot;" Doc="родной город пользователя"/>
      <Param Name="country_id" Type="int?" Default="null" Doc="идентификатор страны пользователя"/>
      <Param Name="city_id" Type="int?" Default="null" Doc="идентификатор города пользователя"/>
      <Param Name="status" Type="string" Default="&quot;&quot;" Doc="статус пользователя, который также может быть изменен методом status.set"/>
    </Params>
  </Method>
  <Method Name="account.getProfileInfo" Type="User" NeedToken="true" >
    <Doc>
      <Summary>
        Возвращает информацию о текущем профиле
      </Summary>
    </Doc>
    <Params />
  </Method>
  <Method Name="account.setInfo" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Позволяет редактировать информацию о текущем аккаунте.
      </Summary>
    </Doc>
    <Params>
      <Param Name="intro" Type="int?" Default="null" Doc="битовая маска, отвечающая за прохождение обучения в мобильных клиентах"/>
      <Param Name="own_posts_default" Type="bool?" Default="null" Doc="Отображать по дефолту только записи пользователя"/>
      <Param Name="no_wall_replies" Type="bool?" Default="null" Doc="отключить комментирование записей на стене"/>
    </Params>
  </Method>
  <Method Name="account.setNameInMenu" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Устанавливает короткое название приложения (до 17 символов), которое выводится пользователю в левом меню
      </Summary>
    </Doc>
    <Params>
      <Param Name="name" Type="string" Doc="короткое название приложения"/>
      <Param Name="user_id" Type="string" Doc="идентификатор пользователя"/>
    </Params>
  </Method>
  <Method Name="account.setOffline" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Помечает текущего пользователя как offline
      </Summary>
    </Doc>
    <Params />
  </Method>
  <Method Name="account.setOnline" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Помечает текущего пользователя как online на 15 минут
      </Summary>
    </Doc>
    <Params>
      <Param Name="voip" Type="bool" Default="true" Doc="возможны ли видеозвонки для данного устройства" />
    </Params>
  </Method>
  <Method Name="account.setSilenceMode" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Отключает push-уведомления на заданный промежуток времени
      </Summary>
    </Doc>
    <Params>
      <Param Name="device_id" Type="string" Doc="уникальный идентификатор устройства"/>
      <Param Name="time" Type="int" Doc="время в секундах на которое требуется отключить уведомления, -1 отключить навсегда"/>
      <Param Name="chat_id" Type="int?" Default="null" Doc=""/>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя"/>
      <Param Name="sound" Type="int" Default="0" Doc="включить/отключить звук в данном диалоге" />
    </Params>
  </Method>
  <Method Name="account.unbanUser" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Убирает пользователя из черного списка
      </Summary>
    </Doc>
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя, которого нужно убрать из черного списка"/>
    </Params>
  </Method>
  <Method Name="account.registerDevice" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Подписывает устройство на базе iOS, Android или Windows Phone на получение Push-уведомлений
      </Summary>
    </Doc>
    <Params>
      <Param Name="token" Type="string" Doc="Идентификатор устройства, используемый для отправки уведомлений. (для mpns идентификатор должен представлять из себя URL для отправки уведомлений)"/>
      <Param Name="device_id" Type="string"  Doc="уникальный идентификатор устройства"/>
      <Param Name="settings" Type="string" Doc="сериализованный JSON-объект, описывающий настройки уведомлений в специальном формате"/>
      <!--todo: serialization-->
      <Param Name="device_year" Type="int?" Default="null" Doc="год устройства"/>
      <Param Name="device_model" Type="string" Default="&quot;&quot;" Doc="cтроковое название модели устройства"/>
      <Param Name="system_version" Type="string"  Default="&quot;&quot;" Doc="строковая версия операционной системы устройства"/>
      <Param Name="sandbox" Type="bool?" Default="null" Doc="(iOS) использовать sandbox сервер для отправки push-уведомлений"/>
    </Params>
  </Method>
  <Method Name="account.unregisterDevice" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Отписывает устройство от Push уведомлений
      </Summary>
    </Doc>
    <Params>
      <Param Name="device_id" Type="string" Doc="уникальный идентификатор устройства"/>
      <Param Name="sandbox" Type="bool?" Default="null" Doc="отписать устройство, использующее sandbox сервер для отправки push-уведомлений"/>
    </Params>
  </Method>
  <Method Name="apps.deleteAppRequests" Type="void" NeedToken="true" >
    <Doc>
      <Summary>
        Удаляет все уведомления о запросах, отправленных из текущего приложения
      </Summary>
    </Doc>
    <Params />
  </Method>
  <Method Name="apps.getScore" Type="long" NeedToken="true" >
    <Doc>
      <Summary>
        Метод возвращает количество очков пользователя в этой игре
      </Summary>
    </Doc>
    <Params />
  </Method>
  <Method Name="apps.getLeaderboard" NameSuffix="Extended" Type="EntityList&lt;User&gt;" NeedToken="true" >
    <Doc>
      <Summary>
        Возвращает рейтинг пользователей в игре
      </Summary>
    </Doc>
    <Params>
      <Param Name="type" Type="LeaderBoardType" Doc="Тип рейтинга"/>
      <Param Name="global" Type="bool" Default="true" Doc="Глобальный/только друзья"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="extended" Value="1"/>
    </Hardcoded>
  </Method>
  <Method Name="apps.getLeaderboard" Type="EntityList&lt;int&gt;" NeedToken="true" >
    <Doc>
      <Summary>
        Возвращает рейтинг пользователей в игре
      </Summary>
    </Doc>
    <Params>
      <Param Name="type" Type="LeaderBoardType" Doc="Тип рейтинга"/>
      <Param Name="global" Type="bool" Default="true" Doc="Глобальный/только друзья"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="extended" Value="0"/>
    </Hardcoded>
  </Method>
  <Method Name="audio.add" Type="int" NeedToken="true" >
    <Doc>
      <Summary>
        Копирует аудиозапись на страницу пользователя или группы
      </Summary>
    </Doc>
    <Params>
      <Param Name="owner_id" Type="int" Doc="идентификатор владельца аудиозаписи (пользователь или сообщество)"/>
      <Param Name="audio_id" Type="long" Doc="Идентификатор аудиозаписи"/>
      <Param Name="group_id" Type="int?" Default="null" Doc="идентификатор сообщества (если аудиозапись необходимо скопировать в список сообщества)"/>
      <Param Name="album_id" Type="long?" Default="null" Doc="идентификатор альбома, в который нужно переместить аудиозапись" />
    </Params>
  </Method>
  <Method Name="audio.addAlbum" Type="AddAlbum" NeedToken="true" >
    <Doc>
      <Summary>
        Создает пустой альбом аудиозаписей
      </Summary>
    </Doc>
    <Params>
      <Param Name="title" Type="string" Doc="название альбома"/>
      <Param Name="group_id" Type="int?" Default="0" Doc="идентификатор сообщества (если альбом нужно создать в сообществе)"/>
    </Params>
  </Method>
  <Method Name="audio.delete" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Удаляет аудиозапись со страницы пользователя или сообщества
      </Summary>
    </Doc>
    <Params>
      <Param Name="audio_id" Type="long" Doc="идентификатор аудиозаписи" />
      <Param Name="owner_id" Type="int" Doc="идентификатор владельца аудиозаписи (пользователь или сообщество)"/>
    </Params>
  </Method>
  <Method Name="audio.deleteAlbum" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Удаляет альбом аудиозаписей
      </Summary>
    </Doc>
    <Params>
      <Param Name="album_id" Type="long" Doc="идентификатор альбома"/>
      <Param Name="group_id" Type="int?" Default="null" Doc="идентификатор сообщества, которому принадлежит альбом" />
    </Params>
  </Method>
  <Method Name="audio.edit" Type="int" NeedToken="true" >
    <Params>
      <Param Name="owner_id" Type="int" />
      <Param Name="audio_id" Type="long" />
      <Param Name="artist" Type="string" Default="&quot;&quot;" />
      <Param Name="title" Type="string" Default="&quot;&quot;" />
      <Param Name="text" Type="string" Default="&quot;&quot;" />
      <Param Name="genre_id" Type="AudioGenre?" Default="null" />
      <Param Name="no_search" Type="bool?" Default="null" />
    </Params>
  </Method>
  <Method Name="audio.editAlbum" Type="void" NeedToken="true">
    <Params>
      <Param Name="album_id" Type="long" />
      <Param Name="title" Type="string"/>
      <Param Name="group_id" Type="int?" Default="null"/>
    </Params>
  </Method>
  <Method Name="audio.moveToAlbum" Type="void" NeedToken="true">
    <Params>
      <Param Name="album_id" Type="long" />
      <Param Name="group_id" Type="int?" Default="null"/>
      <Param Name="audio_ids" Type="long[]" />
    </Params>
  </Method>
  <Method Name="audio.get" Type="EntityList&lt;Audio&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="album_id" Type="long?" Default="null" />
      <Param Name="audio_ids" Type="long[]" Default="null" />
    </Params>
    <Hardcoded>
      <HardcodedParam Name="need_user" Value="false"/><!--they've broken it-->
    </Hardcoded>
  </Method>
  <Method Name="audio.getBroadcastList" NameSuffix="Groups" Type="Group[]" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="active" Type="bool" Default="true"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="filter" Value="groups"/>
    </Hardcoded>
  </Method>
  <Method Name="audio.getBroadcastList" NameSuffix="Users" Type="User[]" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="active" Type="bool" Default="true"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="filter" Value="friends"/>
    </Hardcoded>
  </Method>
  <Method Name="audio.getPopular" Type="EntityList&lt;Audio&gt;" NeedToken="false" Pageable="100" >
    <Params>
      <Param Name="genre_id" Type="AudioGenre?" Default="null"/>
      <Param Name="only_eng" Type="bool?" Default="null" />
    </Params>
  </Method>
  <Method Name="audio.getRecommendations" Type="EntityList&lt;Audio&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="genre_id" Type="AudioGenre?" Default="null"/>
      <Param Name="only_eng" Type="bool?" Default="null" />
    </Params>
  </Method>
  <Method Name="audio.getAlbums" Type="EntityList&lt;AudioAlbum&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="audio.getById" Type="Audio[]" NeedToken="false" >
    <Params>
      <Param Name="itunes" Type="bool" Default="false" />
      <Param Name="audios" Type="ContentId[]" Custom="String.Join(&quot;,&quot;,#name.Select(a=>a.ToIdString()).ToArray())" />
    </Params>
  </Method>
  <Method Name="audio.getCount" Type="int" NeedToken="false" >
    <Params>
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="audio.getLyrics" Type="Lyrics" NeedToken="false" >
    <Params>
      <Param Name="lyrics_id" Type="long" />
    </Params>
  </Method>
  <Method Name="audio.getUploadServer" Type="string" NeedToken="false" >
    <Params>
      <Param Name="album_id" Type="long" />
      <Param Name="group_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="audio.reorder" Type="void" NeedToken="true">
    <Params>
      <Param Name="audio_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="before" Type="long?" Default="null" />
      <Param Name="after" Type="long?" Default="null" />
    </Params>
  </Method>
  <Method Name="audio.restore" Type="Audio" NeedToken="true" >
    <Params>
      <Param Name="audio_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="audio.save" Type="Audio[]" NeedToken="true" >
    <Params>
      <Param Name="server" Type="string" />
      <Param Name="audio" Type="string" />
      <Param Name="hash" Type="string" />
      <Param Name="artist" Type="string" Default="&quot;&quot;" />
      <Param Name="title" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="audio.search" Type="EntityList&lt;Audio&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="q" Type="string" />
      <Param Name="auto_complete" Type="bool" Default="true" />
      <Param Name="lyrics" Type="bool" Default="false" />
      <Param Name="performer_only" Type="bool" Default="false" />
      <Param Name="sort" Type="AudioSortOrder" Default="AudioSortOrder.ByRating" />
      <Param Name="search_own" Type="bool" Default="false" />
    </Params>
  </Method>
  <Method Name="audio.setBroadcast" Type="void" NeedToken="true">
    <Params>
      <Param Name="audio" Type="ContentId" Custom="#name.ToIdString()" />
      <Param Name="target_ids" Type="int[]"/>
    </Params>
  </Method>
  <Method Name="auth.checkPhone" Type="bool" NeedToken="false" >
    <Params>
      <Param Name="phone" Type="string" />
      <Param Name="client_secret" Type="string" />
      <Param Name="client_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="auth.confirm" Type="ConfirmResult" NeedToken="true" >
    <Params>
      <Param Name="client_id" Type="int" />
      <Param Name="client_secret" Type="string" />
      <Param Name="phone" Type="string" />
      <Param Name="code" Type="string" />
      <Param Name="password" Type="string" Default="&quot;&quot;" />
      <Param Name="test_mode" Type="bool" Default="false" />
      <Param Name="intro" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="auth.restore" Type="AuthRestore" NeedToken="false" >
    <Params>
      <Param Name="phone" Type="long" />
    </Params>
  </Method>
  <Method Name="board.closeTopic" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" Doc="идентификатор сообщества, в котором размещено обсуждение" />
      <Param Name="topic_id" Type="int" Doc="идентификатор обсуждения"/>
    </Params>
  </Method>
  <Method Name="board.deleteComment" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" Doc="идентификатор сообщества" />
      <Param Name="topic_id" Type="int" Doc="идентификатор обсуждения"/>
      <Param Name="comment_id" Type="int" />
    </Params>
  </Method>
  <Method Name="board.deleteTopic" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" Doc="идентификатор сообщества, в котором размещено обсуждение" />
      <Param Name="topic_id" Type="int" Doc="идентификатор обсуждения"/>
    </Params>
  </Method>
  <Method Name="board.fixTopic" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" Doc="идентификатор сообщества, в котором размещено обсуждение" />
      <Param Name="topic_id" Type="int" Doc="идентификатор обсуждения"/>
    </Params>
  </Method>
  <Method Name="board.restoreComment" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" Doc="идентификатор сообщества" />
      <Param Name="topic_id" Type="int" Doc="идентификатор обсуждения"/>
      <Param Name="comment_id" Type="int" />
    </Params>
  </Method>
  <Method Name="board.unfixTopic" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" Doc="идентификатор сообщества, в котором размещено обсуждение" />
      <Param Name="topic_id" Type="int" Doc="идентификатор обсуждения"/>
    </Params>
  </Method>
  <Method Name="database.getChairs" Type="EntityList&lt;DatabaseEntry&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="faculty_id" Type="int" />
    </Params>
  </Method>
  <Method Name="database.getCities" Type="DatabaseCity[]" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="country_id" Type="int" />
      <Param Name="region_id" Type="int?" Default="null" />
      <Param Name="q" Type="string" Default="&quot;&quot;" />
      <Param Name="need_all" Type="bool" Default="false" />
    </Params>
  </Method>
  <Method Name="database.getCitiesById" Type="DatabaseCity[]" NeedToken="false" >
    <Params>
      <Param Name="city_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="database.getCountries" Type="EntityList&lt;DatabaseEntry&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="code" Type="string" Default="&quot;&quot;" />
      <Param Name="need_all" Type="bool" Default="false" />
    </Params>
  </Method>
  <Method Name="database.getCountriesById" Type="DatabaseEntry[]" NeedToken="false" >
    <Params>
      <Param Name="country_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="database.getFaculties" Type="EntityList&lt;DatabaseEntry&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="university_id" Type="int" />
    </Params>
  </Method>
  <Method Name="database.getRegions" Type="EntityList&lt;DatabaseEntry&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="country_id" Type="int" />
      <Param Name="q" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="database.getSchools" Type="DatabaseEntry[]" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="city_id" Type="int?" Default="null" />
      <Param Name="q" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="database.getSchoolClasses" Type="DatabaseClass[]" NeedToken="false">
    <Params>
      <Param Name="country_id" Type="int" />
    </Params>
  </Method>
  <Method Name="database.getStreetsById" Type="DatabaseEntry[]" NeedToken="false" >
    <Params>
      <Param Name="street_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="database.getUniversities" Type="DatabaseEntry[]" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="country_id" Type="int?" Default="null" />
      <Param Name="city_id" Type="int?" Default="null" />
      <Param Name="q" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="docs.add" Type="int" NeedToken="true" >
    <Params>
      <Param Name="doc_id" Type="long" />
      <Param Name="owner_id" Type="int" />
      <Param Name="access_key" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="docs.delete" Type="void" NeedToken="true">
    <Params>
      <Param Name="doc_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="docs.get" Type="EntityList&lt;Document&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="docs.getById" Type="Document[]" NeedToken="false" >
    <Params>
      <Param Name="docs" Type="ContentId[]" Custom="String.Join(&quot;,&quot;,#name.Select(a=>a.ToIdString()).ToArray())" />
    </Params>
  </Method>
  <Method Name="docs.getUploadServer" Type="string" NeedToken="true" >
    <Params>
      <Param Name="group_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="docs.getWallUploadServer" Type="string" NeedToken="true" >
    <Params>
      <Param Name="group_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="docs.save" Type="Document[]" NeedToken="true" >
    <Params>
      <Param Name="file" Type="string" />
      <Param Name="title" Type="string" />
      <Param Name="tags" Type="string[]" />
    </Params>
  </Method>
  <Method Name="fave.getLinks" Type="EntityList&lt;Link&gt;" NeedToken="true" Pageable="100">
    <Params/>
  </Method>
  <Method Name="fave.getUsers" Type="EntityList&lt;User&gt;" NeedToken="true" Pageable="100">
    <Params/>
  </Method>
  <Method Name="fave.getPhotos" Type="EntityList&lt;Photo&gt;" NeedToken="true" Pageable="100">
    <Params/>
  </Method>
  <Method Name="fave.getPosts" Type="EntityList&lt;Post&gt;" NeedToken="true" Pageable="100">
    <Params/>
  </Method>
  <Method Name="fave.getVideos" Type="EntityList&lt;Video&gt;" NeedToken="true" Pageable="100">
    <Params/>
  </Method>
  <Method Name="fave.removeUser" Type="void" NeedToken="true">
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя"/>
    </Params>
  </Method>
  <Method Name="fave.removeLink" Type="void" NeedToken="true">
    <Params>
      <Param Name="link_id" Type="int" />
    </Params>
  </Method>
  <Method Name="fave.removeGroup" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
    </Params>
  </Method>
  <Method Name="fave.addGroup" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
    </Params>
  </Method>
  <Method Name="fave.addUser" Type="void" NeedToken="true">
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя"/>
    </Params>
  </Method>
  <Method Name="fave.addLink" Type="void" NeedToken="true">
    <Params>
      <Param Name="link" Type="string" />
      <Param Name="text" Type="string" Default="&quot;&quot;"/>
    </Params>
  </Method>
  <Method Name="friends.add" Type="AddFriendResult" NeedToken="true" >
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя"/>
      <Param Name="text" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="friends.addList" Type="AddFriendsList" NeedToken="true" >
    <Params>
      <Param Name="name" Type="string" />
      <Param Name="user_ids" Type="int[]" Doc="идентификатор пользователя"/>
    </Params>
  </Method>
  <Method Name="friends.areFriends" Type="FriendshipStatus[]" NeedToken="true" >
    <Params>
      <Param Name="need_sign" Type="bool" Default="false" />
      <Param Name="user_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="friends.delete" Type="FriendsDelete" NeedToken="true" >
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя"/>
    </Params>
  </Method>
  <Method Name="friends.deleteAllRequests" Type="void" NeedToken="true">
    <Params />
  </Method>
  <Method Name="friends.deleteList" Type="void" NeedToken="true">
    <Params>
      <Param Name="list_id" Type="int" />
    </Params>
  </Method>
  <Method Name="friends.edit" Type="void" NeedToken="true">
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя"/>
      <Param Name="list_ids" Type="long[]" />
    </Params>
  </Method>
  <Method Name="friends.editList" Type="void" NeedToken="true">
    <Params>
      <Param Name="list_id" Type="long"/>
      <Param Name="name" Type="string" Default="&quot;&quot;"/>
      <Param Name="user_ids" Type="int[]" Default="null"/>
      <Param Name="add_user_ids" Type="int[]" Default="null"/>
      <Param Name="delete_user_ids" Type="int[]" Default="null"/>
    </Params>
  </Method>
  <Method Name="friends.getLists" Type="EntityList&lt;FriendsList&gt;" NeedToken="false">
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя"/>
      <Param Name="return_system" Type="bool" Default="true"/>
    </Params>
  </Method>
  <Method Name="friends.get" Type="EntityList&lt;User&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя"/>
      <Param Name="list_id" Type="int?" Default="null" />
      <Param Name="fields" Type="UserFields" Default="UserFields.Anything" />
      <Param Name="order" Type="UserSortOrder" Default="UserSortOrder.ById" />
      <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
    </Params>
  </Method>
  <Method Name="friends.get" NameSuffix="Ids" Type="EntityList&lt;int&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя"/>
      <Param Name="list_id" Type="int?" Default="null" />
      <Param Name="order" Type="UserSortOrder" Default="UserSortOrder.ById" />
    </Params>
  </Method>
  <Method Name="friends.getAvailableForCall" NameSuffix="Ids" Type="EntityList&lt;int&gt;" NeedToken="false">
    <Params/>
  </Method>
  <Method Name="friends.getAvailableForCall" Type="EntityList&lt;User&gt;" NeedToken="false">
    <Params>
      <Param Name="fields" Type="UserFields" Default="UserFields.Anything" />
      <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
    </Params>
  </Method>
  <Method Name="friends.get" Type="EntityList&lt;int&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя" />
      <Param Name="list_id" Type="int?" Default="null" />
      <Param Name="order" Type="UserSortOrder" Default="UserSortOrder.ById" />
    </Params>
  </Method>
  <Method Name="friends.getAppUsers" Type="int[]" NeedToken="false" >
    <Params />
  </Method>
  <Method Name="friends.getByPhones" Type="User[]" NeedToken="false" >
    <Params>
      <Param Name="fields" Type="UserFields" Default="UserFields.None" />
      <Param Name="phones" Type="ulong[]" Default="null" Custom="String.Join( &quot;,&quot;, #name.Select( a =&gt; &quot;+&quot; + a ) )" />
    </Params>
  </Method>
  <Method Name="friends.getMutual" Type="int[]" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="target_uid" Type="int" />
      <Param Name="source_uid" Type="int?" Default="null" />
      <Param Name="order" Type="bool" Default="false" Custom="#name ? &quot;random&quot; : &quot;&quot;" />
    </Params>
  </Method>
  <Method Name="friends.getOnline" Type="int[]" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя" />
      <Param Name="list_id" Type="int?" Default="null" />
      <Param Name="order" Type="UserSortOrder?" Default="null" />
    </Params>
  </Method>
  <Method Name="friends.getRecent" Type="int[]" NeedToken="true" >
    <Params>
      <Param Name="count" Type="int" Default="20" />
    </Params>
  </Method>
  <Method Name="friends.getSuggestions" Type="EntityList&lt;User&gt;" NeedToken="true" Pageable="100">
    <Params>
      <Param Name="filters" Type="FriendSuggestionFilters" Default="FriendSuggestionFilters.Everything" />
      <Param Name="fields" Type="UserFields" Default="UserFields.None" />
      <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
    </Params>
  </Method>
  <Method Name="friends.search" Type="EntityList&lt;User&gt;" NeedToken="false" Pageable="20">
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя"/>
      <Param Name="q" Type="string" Default="&quot;&quot;" />
      <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
    </Params>
  </Method>
  <Method Name="groups.addLink" Type="Link" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="link" Type="string" />
      <Param Name="text" Type="string" Default="&quot;&quot;"/>
    </Params>
  </Method>
  <Method Name="groups.approveRequest" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя"/>
    </Params>
  </Method>
  <Method Name="groups.create" Type="Group" NeedToken="true">
    <Params>
      <Param Name="title" Type="string" />
      <Param Name="type" Type="PageType" Default="PageType.Group"/>
      <Param Name="subtype" Type="PageSubtype?" Default="null"/>
      <Param Name="description" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="groups.deleteLink" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="link_id" Type="int" />
    </Params>
  </Method>
  <Method Name="groups.edit" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int"/>
      <Param Name="title" Type="string" Default="&quot;&quot;"/>
      <Param Name="description" Type="string" Default="&quot;&quot;"/>
      <Param Name="screen_name" Type="string" Default="&quot;&quot;"/>
      <Param Name="website" Type="string" Default="&quot;&quot;"/>
      <Param Name="email" Type="string" Default="&quot;&quot;"/>
      <Param Name="phone" Type="string" Default="&quot;&quot;"/>
      <Param Name="rss" Type="string" Default="&quot;&quot;"/>
      <Param Name="event_start_date" Type="DateTimeOffset?" Default="null"/>
      <Param Name="event_finish_date" Type="DateTimeOffset?" Default="null"/>
      <Param Name="event_group_id" Type="DateTimeOffset?" Default="null"/>
      <!--todo:enums-->
      <Param Name="subject" Type="int?" Default="null"/>
      <Param Name="public_category" Type="int?" Default="null"/>
      <Param Name="public_subcategory" Type="int?" Default="null"/>
      <Param Name="access" Type="GroupAccess?" Default="null"/>
      <Param Name="wall" Type="AccessType?" Default="null"/>
      <Param Name="topics" Type="AccessType?" Default="null"/>
      <Param Name="photos" Type="AccessType?" Default="null"/>
      <Param Name="video" Type="AccessType?" Default="null"/>
      <Param Name="audio" Type="AccessType?" Default="null"/>
      <Param Name="public_date" Type="Date?" Default="null"/>
      <Param Name="links" Type="bool?" Default="null"/>
      <Param Name="events" Type="bool?" Default="null"/>
      <Param Name="places" Type="bool?" Default="null"/>
      <Param Name="contacts" Type="bool?" Default="null"/>
    </Params>
  </Method>
  <Method Name="groups.editLink" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="link_id" Type="int" />
      <Param Name="text" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="groups.get" Type="EntityList&lt;int&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя" />
      <Param Name="filter" Type="GroupsGetFilter?" Default="null"/>
    </Params>
  </Method>
  <Method Name="groups.getBanned" Type="User[]" NeedToken="true" Pageable="100">
    <Params>
      <Param Name="group_id" Type="int" />
    </Params>
  </Method>
  <Method Name="groups.getById" Type="Group[]" NeedToken="false" >
    <Params>
      <Param Name="group_ids" Type="string[]" />
      <Param Name="fields" Type="GroupFields" />
    </Params>
  </Method>
  <Method Name="groups.getById" Type="Group[]" NeedToken="false" >
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="fields" Type="GroupFields" />
    </Params>
  </Method>

    <Method Name="groups.getById" Type="Group[]" NeedToken="false" >
        <Params>
            <Param Name="group_id" Type="string" />
            <Param Name="fields" Type="GroupFields" />
        </Params>
    </Method>
    <Method Name="groups.getById" Type="Group[]" NeedToken="false" >
        <Params>
            <Param Name="group_ids" Type="int[]" />
            <Param Name="fields" Type="GroupFields" />
        </Params>
    </Method>
  <Method Name="groups.getMembers" Type="EntityList&lt;int&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="group_id" Type="string" />
      <Param Name="filter" Type="GroupMembersFilter?" Default="null" />
      <Param Name="sort" Type="MembersSortOrder?" Default="null"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="fields" Value=""/>
    </Hardcoded>
  </Method>
  <Method Name="groups.getMembers" Type="EntityList&lt;int&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="filter" Type="GroupMembersFilter?" Default="null" />
      <Param Name="sort" Type="MembersSortOrder?" Default="null"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="fields" Value=""/>
    </Hardcoded>
  </Method>
  <Method Name="groups.getMembers" NameSuffix="Managers" Type="EntityList&lt;GroupManager&gt;" NeedToken="true" Pageable="100">
    <Params>
      <Param Name="group_id" Type="string" />
      <Param Name="sort" Type="MembersSortOrder?" Default="null"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="filter" Value="managers"/>
    </Hardcoded>
  </Method>
  <Method Name="groups.getMembers" NameSuffix="Managers" Type="EntityList&lt;GroupManager&gt;" NeedToken="true" Pageable="100">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="sort" Type="MembersSortOrder?" Default="null"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="filter" Value="managers"/>
    </Hardcoded>
  </Method>
  <Method Name="groups.getMembers" Type="EntityList&lt;User&gt;" NeedToken="true" Pageable="100">
    <Params>
      <Param Name="group_id" Type="string" />
      <Param Name="fields" Type="UserFields" Default="UserFields.Anything" />
      <Param Name="filter" Type="GroupMembersFilter?" Default="null" />
      <Param Name="sort" Type="MembersSortOrder?" Default="null"/>
    </Params>
  </Method>
  <Method Name="groups.getMembers" Type="EntityList&lt;User&gt;" NeedToken="true" Pageable="100">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="fields" Type="UserFields" Default="UserFields.Anything" />
      <Param Name="filter" Type="GroupMembersFilter?" Default="null" />
      <Param Name="sort" Type="MembersSortOrder?" Default="null"/>
    </Params>
  </Method>
  <Method Name="groups.isMember" Type="bool" NeedToken="false" >
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="extended" Value="0"/>
    </Hardcoded>
  </Method>
  <Method Name="groups.invite" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя" />
    </Params>
  </Method>
  <Method Name="groups.isMember" NameSuffix="Extended" Type="MemberShip" NeedToken="false" >
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="user_id" Type="int?" Default="null"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="extended" Value="1"/>
    </Hardcoded>
  </Method>
  <Method Name="groups.isMember" Type="MemberShip[]" NeedToken="false" >
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="user_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="groups.join" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="not_sure" Type="bool" Default="false" />
    </Params>
  </Method>
  <Method Name="groups.leave" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
    </Params>
  </Method>
  <Method Name="groups.unbanUser" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="user_id" Type="int" />
    </Params>
  </Method>
  <Method Name="groups.removeUser" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="user_id" Type="int" />
    </Params>
  </Method>
  <Method Name="groups.reorderLink" Type="void" NeedToken="true">
    <Params>
      <Param Name="group_id" Type="int" />
      <Param Name="link_id" Type="long" />
      <Param Name="after" Type="long" Default="0" />
    </Params>
  </Method>
  <Method Name="messages.addChatUser" Type="void" NeedToken="true">
    <Params>
      <Param Name="user_id" Type="int" />
      <Param Name="chat_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="messages.delete" Type="void" NeedToken="true">
    <Params>
      <Param Name="message_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="messages.deleteChatPhoto" Type="void" NeedToken="true">
    <Params>
      <Param Name="chat_id" Type="int" />
    </Params>
  </Method>
  <Method Name="messages.deleteDialog" Type="void" NeedToken="true">
    <Params>
      <Param Name="user_id" Type="int" />
    </Params>
  </Method>
  <Method Name="messages.get" Type="EntityList&lt;Message&gt;" NeedToken="true" Pageable="200" >
    <Params>
      <Param Name="@out" Type="int" Default="0"/>
      <Param Name="time_offset" Type="int" Default="0"/>
      <Param Name="filters" Type="int" Default="0"/>
      <Param Name="preview_length" Type="int" Default="0"/>
      <Param Name="last_message_id" Type="long?" Default="null"/>
    </Params>
  </Method>
  <Method Name="messages.getHistory" NameSuffix="Chat" Type="EntityList&lt;Message&gt;" NeedToken="true" Pageable="200" >
    <Params>
      <Param Name="chat_id" Type="int"/>
      <Param Name="rev" Type="bool" Default="false"/>
      <Param Name="start_message_id" Type="long?" Default="null"/>
    </Params>
  </Method>
  <Method Name="messages.getHistory" NameSuffix="User" Type="EntityList&lt;Message&gt;" NeedToken="true" Pageable="200" >
    <Params>
      <Param Name="user_id" Type="int"/>
      <Param Name="rev" Type="bool" Default="false"/>
      <Param Name="start_message_id" Type="long?" Default="null"/>
    </Params>
  </Method>
  <Method Name="messages.getLastActivity" Type="LastActivity" NeedToken="true" >
    <Params>
      <Param Name="user_id" Type="int" />
    </Params>
  </Method>
  <Method Name="messages.markAsImportant" Type="void" NeedToken="true">
    <Params>
      <Param Name="important" Type="bool" />
      <Param Name="message_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="messages.markAsRead" Type="void" NeedToken="true">
    <Params>
      <Param Name="user_id" Type="int" />
      <Param Name="start_message_id" Type="int?" Default="null" />
      <Param Name="message_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="messages.send" Type="int" NeedToken="true">
    <Params>
      <Param Name="user_id" Type="int"/>
      <Param Name="message" Type="string" Default="null"/>
      <Param Name="guid" Type="int?" Default="null"/>
      <Param Name="lat" Type="double?" Default="null"/>
      <Param Name="@long" Type="double?" Default="null"/>
      <Param Name="attachment"  Type="ContentId[]" Custom="String.Join(&quot;,&quot;,#name.Select(a=>a.ToAttachmentString()).ToArray())" Default="null"/>
      <Param Name="forward_messages" Type="long[]" Default="null"/>
      <Param Name="sticker_id" Type="int?" Default="null"/>
    </Params>
  </Method>
  <Method Name="messages.send" Type="int" NeedToken="true">
    <Params>
      <Param Name="user_ids" Type="int[]"/>
      <Param Name="message" Type="string" Default="null"/>
      <Param Name="guid" Type="int?" Default="null"/>
      <Param Name="lat" Type="double?" Default="null"/>
      <Param Name="@long" Type="double?" Default="null"/>
      <Param Name="attachment"  Type="ContentId[]" Custom="String.Join(&quot;,&quot;,#name.Select(a=>a.ToAttachmentString()).ToArray())" Default="null"/>
      <Param Name="forward_messages" Type="long[]" Default="null"/>
      <Param Name="sticker_id" Type="int?" Default="null"/>
    </Params>
  </Method>
  <Method Name="messages.send" Type="int" NeedToken="true">
    <Params>
      <Param Name="domain" Type="string"/>
      <Param Name="message" Type="string" Default="null"/>
      <Param Name="guid" Type="int?" Default="null"/>
      <Param Name="lat" Type="double?" Default="null"/>
      <Param Name="@long" Type="double?" Default="null"/>
      <Param Name="attachment"  Type="ContentId[]" Custom="String.Join(&quot;,&quot;,#name.Select(a=>a.ToAttachmentString()).ToArray())" Default="null"/>
      <Param Name="forward_messages" Type="long[]" Default="null"/>
      <Param Name="sticker_id" Type="int?" Default="null"/>
    </Params>
  </Method>
  <Method Name="messages.send" NameSuffix="Chat" Type="int" NeedToken="true">
    <Params>
      <Param Name="chat_id" Type="int"/>
      <Param Name="message" Type="string" Default="null"/>
      <Param Name="guid" Type="int?" Default="null"/>
      <Param Name="lat" Type="double?" Default="null"/>
      <Param Name="@long" Type="double?" Default="null"/>
      <Param Name="attachment"  Type="ContentId[]" Custom="String.Join(&quot;,&quot;,#name.Select(a=>a.ToAttachmentString()).ToArray())" Default="null"/>
      <Param Name="forward_messages" Type="long[]" Default="null"/>
      <Param Name="sticker_id" Type="int?" Default="null"/>
    </Params>
  </Method>
    
  <Method Name="messages.send" NameSuffix="Peer" Type="int" NeedToken="true">
    <Params>
      <Param Name="peer_id" Type="long"/>
      <Param Name="message" Type="string" Default="null"/>
      <Param Name="guid" Type="int?" Default="null"/>
      <Param Name="lat" Type="double?" Default="null"/>
      <Param Name="@long" Type="double?" Default="null"/>
      <Param Name="attachment"  Type="ContentId[]" Custom="String.Join(&quot;,&quot;,#name.Select(a=>a.ToAttachmentString()).ToArray())" Default="null"/>
      <Param Name="forward_messages" Type="long[]" Default="null"/>
      <Param Name="sticker_id" Type="int?" Default="null"/>
    </Params>
  </Method>
  <Method Name="messages.removeChatUser" Type="void" NeedToken="true">
    <Params>
      <Param Name="user_id" Type="int" />
      <Param Name="chat_id" Type="int" />
    </Params>
  </Method>
  <Method Name="messages.restore" Type="void" NeedToken="true">
    <Params>
      <Param Name="message_id" Type="int" />
    </Params>
  </Method>
  <Method Name="messages.setActivity" Type="void" NeedToken="true" >
    <Params>
      <Param Name="user_id" Type="int" />
      <Param Name="type" Type="ImActivity" Default="ImActivity.Typing" />
    </Params>
  </Method>
  <Method Name="newsfeed.addBan" Type="void" NeedToken="true">
    <Params>
      <Param Name="user_ids" Type="int[]" Default="null" />
      <Param Name="group_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="newsfeed.deleteBan" Type="void" NeedToken="true">
    <Params>
      <Param Name="user_ids" Type="int[]" Default="null" />
      <Param Name="group_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="newsfeed.deleteList" Type="void" NeedToken="true">
    <Params>
      <Param Name="list_id" Type="int" />
    </Params>
  </Method>
  <Method Name="notes.delete" Type="void" NeedToken="true">
    <Params>
      <Param Name="note_id" Type="int" />
    </Params>
  </Method>
  <Method Name="notes.deleteComment" Type="void" NeedToken="true">
    <Params>
      <Param Name="comment_id" Type="int" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="newsfeed.getBanned" Type="NewsfeedBanned" NeedToken="true">
    <Params/>
    <Hardcoded>
      <HardcodedParam Name="extended" Value="false"/>
    </Hardcoded>
  </Method>
  <Method Name="newsfeed.getBanned" NameSuffix="Extended" Type="NewsfeedBannedExtended" NeedToken="true">
    <Params>
      <Param Name="fields" Type="UserFields" Default="UserFields.None" />
      <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
    </Params>
    <Hardcoded>
      <HardcodedParam Name="extended" Value="true"/>
    </Hardcoded>
  </Method>
  <Method Name="notes.restoreComment" Type="void" NeedToken="true">
    <Params>
      <Param Name="comment_id" Type="int" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="notifications.markAsViewed" Type="void" NeedToken="true">
    <Params />
  </Method>
  <Method Name="pages.clearCache" Type="void" NeedToken="false">
    <Params>
      <Param Name="url" Type="string" />
    </Params>
  </Method>
  <Method Name="photos.confirmTag" Type="void" NeedToken="true">
    <Params>
      <Param Name="tag_id" Type="int" />
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.copy" Type="long" NeedToken="true" >
    <Params>
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="access_key" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="photos.createAlbum" Type="PhotoAlbum" NeedToken="true" >
    <Params>
      <Param Name="title" Type="string" />
      <Param Name="description" Type="string" Default="&quot;&quot;" />
      <Param Name="group_id" Type="int?" Default="null" />
      <Param Name="privacy" Type="PrivacyType?" Default="null" />
      <Param Name="comment_privacy" Type="PrivacyType?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.delete" Type="void" NeedToken="true">
    <Params>
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.deleteAlbum" Type="void" NeedToken="true">
    <Params>
      <Param Name="album_id" Type="long" />
      <Param Name="group_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.deleteComment" Type="void" NeedToken="true">
    <Params>
      <Param Name="comment_id" Type="int" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.edit" Type="void" NeedToken="true">
    <Params>
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="caption" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="photos.editAlbum" Type="void" NeedToken="true">
    <Params>
      <Param Name="album_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="title" Type="string" Default="&quot;&quot;" />
      <Param Name="description" Type="string" Default="&quot;&quot;" />
      <Param Name="privacy" Type="PrivacyType?" Default="null" />
      <Param Name="comment_privacy" Type="PrivacyType?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.get" Type="EntityList&lt;Photo&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="album_id" Type="long?" Default="null" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="photo_ids" Type="int[]" Default="null" />
      <Param Name="rev" Type="bool" Default="true" />
      <Param Name="extended" Type="bool" Default="false" />
      <Param Name="feed_type" Type="FeedType?" Default="null" />
      <Param Name="feed" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.get" Type="EntityList&lt;Photo&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="album_id" Type="SpecialAlbum" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="photo_ids" Type="int[]" Default="null" />
      <Param Name="rev" Type="bool" Default="true" />
      <Param Name="extended" Type="bool" Default="false" />
      <Param Name="feed_type" Type="FeedType?" Default="null" />
      <Param Name="feed" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.getAlbums" Type="EntityList&lt;PhotoAlbum&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="need_system" Type="bool" Default="true" />
      <Param Name="need_covers" Type="bool" Default="true" />
      <Param Name="album_ids" Type="long[]" />
    </Params>
  </Method>
  <Method Name="photos.getAlbumsCount" Type="int" NeedToken="false" >
    <Params>
      <Param Name="user_id" Type="int?" Default="null" />
      <Param Name="group_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.getAll" Type="EntityList&lt;Photo&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="extended" Type="bool" Default="false" />
      <Param Name="no_service_albums" Type="bool" Default="false" />
      <Param Name="need_hidden" Type="bool?" Default="null" />
      <Param Name="skip_hidden" Type="bool?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.getById" Type="Photo[]" NeedToken="false" >
    <Params>
      <Param Name="photos" Type="ContentId[]" />
    </Params>
  </Method>
  <Method Name="photos.getChatUploadServer" Type="PhotosUploadServer" NeedToken="true" >
    <Params>
      <Param Name="chat_id" Type="int" />
      <Param Name="crop_x" Type="int?" Default="null" />
      <Param Name="crop_y" Type="int?" Default="null" />
      <Param Name="crop_width" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.getOwnerPhotoUploadServer" Type="string" NeedToken="true" >
    <Params />
  </Method>
  <Method Name="photos.getTags" Type="PhotoTag[]" NeedToken="false">
    <Params>
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="access_key" Type="string" Default="&quot;&quot;"/>
    </Params>
  </Method>
  <Method Name="photos.getUploadServer" Type="PhotosUploadServer" NeedToken="true" >
    <Params>
      <Param Name="album_id" Type="long" />
      <Param Name="group_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.makeCover" Type="void" NeedToken="true">
    <Params>
      <Param Name="album_id" Type="long" />
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.move" Type="void" NeedToken="true">
    <Params>
      <Param Name="target_album_id" Type="long" />
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.removeTag" Type="void" NeedToken="true">
    <Params>
      <Param Name="tag_id" Type="int" />
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.reorderAlbums" Type="void" NeedToken="true">
    <Params>
      <Param Name="album_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="before" Type="long?" Default="null" />
      <Param Name="after" Type="long?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.reorderPhotos" Type="void" NeedToken="true">
    <Params>
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="before" Type="long?" Default="null" />
      <Param Name="after" Type="long?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.report" Type="void" NeedToken="true">
    <Params>
      <Param Name="photo_id" Type="long" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="reason" Type="ReportReason?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.reportComment" Type="void" NeedToken="true">
    <Params>
      <Param Name="comment_id" Type="int" />
      <Param Name="owner_id" Type="int?" Default="null" />
      <Param Name="reason" Type="ReportReason?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.restoreComment" Type="void" NeedToken="true">
    <Params>
      <Param Name="comment_id" Type="int" />
      <Param Name="owner_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="photos.restore" Type="void" NeedToken="true">
    <Params>
      <Param Name="owner_id" Type="int"/>
      <Param Name="photo_id" Type="long" />
    </Params>
  </Method>
  <Method Name="photos.save" Type="Photo[]" NeedToken="false" >
    <Params>
      <Param Name="album_id" Type="long" />
      <Param Name="server" Type="string" />
      <Param Name="photos_list" Type="string" />
      <Param Name="hash" Type="string" />
      <Param Name="group_id" Type="int?" Default="null" />
      <Param Name="latitude" Type="double?" Default="null" />
      <Param Name="longitude" Type="double?" Default="null" />
      <Param Name="caption" Type="string" Default="&quot;&quot;" />
      <Param Name="description" Type="string" Default="&quot;&quot;" />
    </Params>
  </Method>
  <Method Name="polls.addVote" Type="bool" NeedToken="true">
    <Params>
      <Param Name="poll_id" Type="long" />
      <Param Name="answer_id" Type="int" />
      <Param Name="owner_id" Type="int?"  Default="null" />
      <Param Name="is_board" Type="bool?" Default="null" />
    </Params>
  </Method>
  <Method Name="polls.deleteVote" Type="bool" NeedToken="true">
    <Params>
      <Param Name="poll_id" Type="long" />
      <Param Name="answer_id" Type="int" />
      <Param Name="owner_id" Type="int?"  Default="null" />
      <Param Name="is_board" Type="bool?" Default="null" />
    </Params>
  </Method>
  <Method Name="stats.trackVisitor" Type="void" NeedToken="true" >
    <Params />
  </Method>
  <Method Name="status.get" Type="Status[]" NeedToken="false" >
    <Params>
      <Param Name="user_id" Type="int?" Default="null" />
    </Params>
  </Method>
  <Method Name="status.set" Type="void" NeedToken="true">
    <Params>
      <Param Name="text" Type="string" />
    </Params>
  </Method>
  <Method Name="storage.get" Type="StorageEntry[]" NeedToken="false" >
    <Params>
      <Param Name="user_id" Type="int?" Default="null" />
      <Param Name="global" Type="bool" Default="false" />
      <Param Name="keys" Type="string[]" />
    </Params>
  </Method>
  <Method Name="storage.getKeys" Type="string[]" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="user_id" Type="int?" Default="null" />
      <Param Name="global" Type="bool" Default="false" />
    </Params>
  </Method>
  <Method Name="storage.set" Type="StorageEntry[]" NeedToken="false" >
    <Params>
      <Param Name="key" Type="string" />
      <Param Name="value" Type="string" />
      <Param Name="user_id" Type="int?" Default="null" />
      <Param Name="global" Type="bool" Default="false" />
    </Params>
  </Method>
  <!--<Method Name="users.get" Type="User[]" NeedToken="false" >
        <Params>
            <Param Name="fields" Type="UserFields" Default="UserFields.None" />
            <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
        </Params>
    </Method>-->
  <Method Name="users.get" Type="User[]" NeedToken="false" >
    <Params>
      <Param Name="fields" Type="UserFields" Default="UserFields.None" />
      <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
      <Param Name="user_ids" Type="int[]" />
    </Params>
  </Method>
  <Method Name="users.getFollowers" Type="EntityList&lt;int&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя"/>
      <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
    </Params>
  </Method>
  <Method Name="users.getFollowers" Type="EntityList&lt;User&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя"/>
      <Param Name="fields" Type="UserFields" Default="UserFields.Anything" />
      <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
    </Params>
  </Method>
  <Method Name="users.getNearby" Type="EntityList&lt;User&gt;" NeedToken="false" Pageable="100">
    <Params>
      <Param Name="latitude" Type="double" />
      <Param Name="longitude" Type="double" />
      <Param Name="accuracy" Type="int?" Default="null" />
      <Param Name="timeout" Type="int?" Default="null" />
      <Param Name="radius" Type="byte?" Default="null" />
      <Param Name="fields" Type="UserFields" Default="UserFields.None" />
      <Param Name="name_case" Type="NameCase" Default="NameCase.Nom" />
    </Params>
  </Method>
  <Method Name="users.getSubscriptions" Type="UserSubscriptions" NeedToken="false" Pageable="100">
    <Doc>
      <Summary>
        Возвращает список идентификаторов пользователей и сообществ, которые входят в список подписок пользователя
      </Summary>
    </Doc>
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя"/>
    </Params>
  </Method>
  <Method Name="users.isAppUser" Type="bool" NeedToken="false" >
    <Doc>
      <Summary>
        Возвращает информацию о том, установил ли пользователь приложение
      </Summary>
    </Doc>
    <Params>
      <Param Name="user_id" Type="int?" Default="null" Doc="идентификатор пользователя"/>
    </Params>
  </Method>
  <Method Name="users.report" Type="void" NeedToken="true" >
    <Doc>
      <Summary>
        Позволяет пожаловаться на пользователя
      </Summary>
    </Doc>
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя, на которого нужно подать жалобу"/>
      <Param Name="type" Type="ComplaintType" Doc="тип жалобы"/>
      <Param Name="comment" Type="string" Doc="комментарий к жалобе на пользователя"/>
    </Params>
  </Method>
  <Method Name="users.search" Type="EntityList&lt;User&gt;" NeedToken="true" Pageable="100">
    <Doc>
      <Summary>
        Возвращает список пользователей в соответствии с заданным критерием поиска
      </Summary>
    </Doc>
    <Params>
      <Param Name="q" Type="string" Default="&quot;&quot;" Doc="строка поискового запроса"/>
      <Param Name="sort" Type="SearchSortOrder" Default="SearchSortOrder.ByRating" Doc="порядок сортировки"/>
      <Param Name="fields" Type="UserFields" Default="UserFields.None" Doc="список дополнительных полей профилей, которые необходимо вернуть"/>
      <Param Name="city" Type="int?" Default="null" Doc="идентификатор города"/>
      <Param Name="country" Type="int?" Default="null" Doc="идентификатор страны"/>
      <Param Name="hometown" Type="string" Default="&quot;&quot;" Doc="название города строкой"/>
      <Param Name="university_country" Type="int?" Default="null" Doc="идентификатор страны, в которой пользователи закончили ВУЗ"/>
      <Param Name="university" Type="int?" Default="null" Doc="идентификатор ВУЗа"/>
      <Param Name="university_year" Type="int?" Default="null" Doc="год окончания ВУЗа"/>
      <Param Name="university_faculty" Type="int?" Default="null" Doc="идентификатор факультета"/>
      <Param Name="university_chair" Type="int?" Default="null" Doc="идентификатор кафедры"/>
      <Param Name="sex" Type="Sex?" Default="null" Doc="пол"/>
      <Param Name="status" Type="Relation?" Default="null" Doc="семейное положение"/>
      <Param Name="age_from" Type="byte?" Default="null" Doc="начиная с какого возраста" />
      <Param Name="age_to" Type="byte?" Default="null" Doc="до какого возраста"/>
      <Param Name="birth_day" Type="byte?" Default="null" Doc="день рождения"/>
      <Param Name="birth_month" Type="byte?" Default="null" Doc="месяц рождения"/>
      <Param Name="birth_year" Type="ushort?" Default="null" Doc="год рождения" />
      <Param Name="online" Type="bool?" Default="null" Doc="только в сети"/>
      <Param Name="has_photo" Type="bool?" Default="null" Doc="только с фотографией"/>
      <Param Name="school_country" Type="int?" Default="null" Doc="идентификатор страны, в которой пользователи закончили школу"/>
      <Param Name="school_city" Type="int?" Default="null" Doc="идентификатор города, в котором пользователи закончили школу"/>
      <Param Name="school_class" Type="int?" Default="null" Doc=""/>
      <Param Name="school" Type="int?" Default="null" Doc="идентификатор школы, которую закончили пользователи"/>
      <Param Name="school_year" Type="int?" Default="null" Doc="год окончания школы"/>
      <Param Name="religion" Type="string" Default="&quot;&quot;" Doc="религиозные взгляды"/>
      <Param Name="interests" Type="string" Default="&quot;&quot;" Doc="интересы"/>
      <Param Name="company" Type="string" Default="&quot;&quot;" Doc="название компании, в которой работают пользователи"/>
      <Param Name="position" Type="string" Default="&quot;&quot;" Doc="название должности"/>
      <Param Name="group_id" Type="int?" Default="null" Doc="идентификатор группы, среди пользователей которой необходимо проводить поиск"/>
      <Param Name="from_list" Type="FriendshipType?" Default="null" Doc="Разделы среди которых нужно осуществить поиск"/>
    </Params>
  </Method>
  <Method Name="utils.checkLink" Type="LinkCheckResult" NeedToken="false" >
    <Doc>
      <Summary>
        Возвращает информацию о том, является ли внешняя ссылка заблокированной на сайте ВКонтакте
      </Summary>
    </Doc>
    <Params>
      <Param Name="url" Type="string" />
    </Params>
  </Method>
  <Method Name="utils.getServerTime" Type="DateTimeOffset" NeedToken="false" >
    <Doc>
      <Summary>
        Возвращает текущее время на сервере ВКонтакте
      </Summary>
    </Doc>
    <Params />
  </Method>
  <Method Name="utils.getServerTime" NameSuffix="Raw" Type="int" NeedToken="false" >
    <Doc>
      <Summary>
        Возвращает текущее время на сервере ВКонтакте в unixtime
      </Summary>
    </Doc>
    <Params />
  </Method>
  <Method Name="utils.resolveScreenName" Type="ResolveResult" NeedToken="false" >
    <Doc>
      <Summary>
        Определяет тип объекта (пользователь, сообщество, приложение) и его идентификатор по короткому имени screen_name
      </Summary>
    </Doc>
    <Params>
      <Param Name="screen_name" Type="string" />
    </Params>
  </Method>
  <Method Name="video.add" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Добавляет видеозапись в список пользователя
      </Summary>
    </Doc>
    <Params>
      <Param Name="video_id" Type="long" Doc="идентификатор видеозаписи"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца видеозаписи, по умолчанию идентификатор текущего пользователя"/>
      <Param Name="target_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, в которое нужно добавить видео"/>
    </Params>
  </Method>
  <Method Name="video.delete" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Удаляет видеозапись
      </Summary>
    </Doc>
    <Params>
      <Param Name="video_id" Type="long" Doc="идентификатор видеозаписи"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца видеозаписи, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="video.deleteAlbum" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Удаляет альбом видеозаписей
      </Summary>
    </Doc>
    <Params>
      <Param Name="album_id" Type="long" Doc="идентификатор альбома"/>
      <Param Name="group_id" Type="int?" Default="null" Doc="идентификатор сообщества (если альбом, который необходимо удалить, принадлежит сообществу)"/>
    </Params>
  </Method>
  <Method Name="video.deleteComment" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Удаляет комментарий к видеозаписи
      </Summary>
    </Doc>
    <Params>
      <Param Name="comment_id" Type="int" Doc="идентификатор комментария"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца видеозаписи, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="video.editComment" Type="void" NeedToken="true"><!--todo: attachments-->
    <Doc>
      <Summary>
          Изменяет текст комментария к видеозаписи
      </Summary>
    </Doc>
    <Params>
      <Param Name="message" Type="string" Doc="новый текст комментария (является обязательным, если не задан параметр attachments)"/>
      <Param Name="comment_id" Type="int" Doc="идентификатор комментария"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца видеозаписи, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="video.getNewTags" Type="EntityList&lt;TaggedVideo&gt;" NeedToken="true" Pageable="20"><Doc>
      <Summary>
          Возвращает список видеозаписей, на которых есть непросмотренные отметки
      </Summary>
    </Doc>
    <Params/>
  </Method>
  <Method Name="video.getTags" Type="Tag[]" NeedToken="false">
    <Doc>
      <Summary>
          Добавляет отметку на видеозапись
      </Summary>
    </Doc>
    <Params>
      <Param Name="video_id" Type="long" Doc="идентификатор видеозаписи"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца видеозаписи, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="video.putTag" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Добавляет отметку на видеозапись
      </Summary>
    </Doc>
    <Params>
      <Param Name="user_id" Type="int" Doc="идентификатор пользователя, которого нужно отметить"/>
      <Param Name="video_id" Type="long" Doc="идентификатор видеозаписи"/>
      <Param Name="tagged_name" Type="string" Doc="текст отметки"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца видеозаписи, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="video.removeTag" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Удаляет отметку с видеозаписи
      </Summary>
    </Doc>
    <Params>
      <Param Name="video_id" Type="long" Doc="идентификатор видеозаписи"/>
      <Param Name="tag_id" Type="int" Doc="идентификатор отметки"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца видеозаписи (пользователь или сообщество), по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="video.report" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Позволяет пожаловаться на видеозапись
      </Summary>
    </Doc>
    <Params>
      <Param Name="video_id" Type="long" Doc="идентификатор видеозаписи"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, которому принадлежит видеозапись"/>
      <Param Name="reason" Type="ReportReason?" Default="null" Doc="тип жалобы"/>
      <Param Name="comment" Type="string" Default="&quot;&quot;" Doc="комментарий для жалобы"/>
      <Param Name="search_query" Type="string" Default="&quot;&quot;" Doc="поисковой запрос, если видеозапись была найдена через поиск"/>
    </Params>
  </Method>
  <Method Name="video.reportComment" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Позволяет пожаловаться на комментарий к видеозаписи
      </Summary>
    </Doc>
    <Params>
      <Param Name="comment_id" Type="int" Doc="идентификатор комментария"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца видеозаписи, к которой оставлен комментарий"/>
      <Param Name="reason" Type="ReportReason?" Default="null" Doc="тип жалобы"/>
    </Params>
  </Method>
  <Method Name="video.restoreComment" Type="void" NeedToken="true">
    <Params>
      <Param Name="comment_id" Type="int" Doc="идентификатор удаленного комментария"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, которому принадлежит видеозапись, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="video.restore" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Восстанавливает удаленную видеозапись
      </Summary>
    </Doc>
    <Params>
      <Param Name="video_id" Type="long" Doc="идентификатор видеозаписи"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца видеозаписи, по умолчанию идентификатор текущего пользователя" />
    </Params>
  </Method>
  <Method Name="wall.delete" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Удаляет запись со стены
      </Summary>
    </Doc>
    <Params>
      <Param Name="post_id" Type="int" Doc="идентификатор записи на стене"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, на стене которого находится запись, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="wall.deleteComment" Type="void" NeedToken="true">
    <Doc>
      <Summary>
          Удаляет комментарий текущего пользователя к записи на своей или чужой стене
      </Summary>
    </Doc>
    <Params>
      <Param Name="comment_id" Type="int" Doc="идентификатор комментария"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя, на чьей стене находится комментарий к записи, по умолчанию идентификатор текущего пользователя" />
    </Params>
  </Method>
  <Method Name="wall.get" Type="EntityList&lt;Post&gt;" NeedToken="false" Pageable="100">
    <Doc>
      <Summary>
          Возвращает список записей со стен пользователей или сообществ по их идентификаторам
      </Summary>
    </Doc>
    <Params>
      <Param Name="owner_id" Type="int" Doc="идентификатор пользователя или сообщества"/>
      <Param Name="filter" Type="WallPostFilter" Default="WallPostFilter.All" Doc="определяет, какие типы записей на стене необходимо получить"/>
    </Params>
  </Method>
  <Method Name="wall.get" Type="EntityList&lt;Post&gt;" NeedToken="false" Pageable="100"><!--todo: extended version-->
    <Doc>
      <Summary>
          Возвращает список записей со стен пользователей или сообществ по их идентификаторам
      </Summary>
    </Doc>
    <Params>
      <Param Name="domain" Type="string" Doc="короткий адрес пользователя или сообщества"/>
      <Param Name="filter" Type="WallPostFilter" Default="WallPostFilter.All" Doc="определяет, какие типы записей на стене необходимо получить"/>
    </Params>
  </Method>
  <Method Name="wall.getById" Type="Post[]" NeedToken="true" ><!--todo: extended version-->
    <Doc>
      <Summary>
        Возвращает список записей со стен пользователей или сообществ по их идентификаторам
      </Summary>
    </Doc>
    <Params>
      <Param Name="copy_history_depth" Type="int" Default="2" Doc="идентификаторы постов"/>
      <Param Name="posts" Type="ContentId[]" Custom="String.Join(&quot;,&quot;,#name.Select(a=>a.ToIdString()).ToArray())"  Doc="глубина показа репостов"/>
    </Params>
  </Method>
  <Method Name="wall.getComments" Type="EntityList&lt;Comment&gt;" NeedToken="false" Pageable="100">
    <Doc>
      <Summary>
        Возвращает список комментариев к записи на стене
      </Summary>
    </Doc>
    <Params>
      <Param Name="post_id" Type="int" Doc="идентификатор записи на стене"/>
      <Param Name="sort" Type="string" Doc="порядок сортировки комментариев"/>
      <Param Name="preview_length" Type="int" Doc="количество символов, по которому нужно обрезать текст комментария, 0 - не обрезать" Default="0"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца страницы"/>
      <Param Name="need_likes" Type="bool" Default="false" Doc="возвращать информацию о лайках"/>
    </Params>
  <Hardcoded>
    <HardcodedParam Name="extended" Value="0"/>
  </Hardcoded>
  </Method>
  <Method Name="wall.getComments" Type="EntityListExtended&lt;Comment&gt;" NameSuffix="Extended" NeedToken="false" Pageable="100">
    <Doc>
      <Summary>
        Возвращает список комментариев к записи на стене
      </Summary>
    </Doc>
    <Params>
      <Param Name="post_id" Type="int" Doc="идентификатор записи на стене"/>
      <Param Name="sort" Type="string" Doc="порядок сортировки комментариев"/>
      <Param Name="preview_length" Type="int" Doc="количество символов, по которому нужно обрезать текст комментария, 0 - не обрезать" Default="0"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца страницы"/>
      <Param Name="need_likes" Type="bool" Default="false" Doc="возвращать информацию о лайках"/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="extended" Value="1"/>
    </Hardcoded>
  </Method>
  <Method Name="likes.getList" Type="EntityList&lt;int&gt;" NeedToken="false" Pageable="100">
    <Doc>
      <Summary>
        Получает список идентификаторов пользователей, которые добавили заданный объект в свой список &quot;Мне нравится&quot;
      </Summary>
    </Doc>
    <Params>
      <Param Name="type" Type="string" Doc="тип объекта"/>
      <Param Name="filter" Type="string" Doc="указывает, следует ли вернуть всех пользователей, добавивших объект в список &quot;Мне нравится&quot; или только тех, которые рассказали о нем друзьям"/>
      <Param Name="friends_only" Type="bool" Doc="указывает, необходимо ли возвращать только пользователей, которые являются друзьями текущего пользователя"/>
      <Param Name="skip_own" Type="bool" Doc="не возвращать самого пользователя"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца Like-объекта"/>
      <Param Name="item_id" Type="int?" Default="null" Doc="идентификатор Like-объекта. Если type равен sitepage, то параметр item_id может содержать значение параметра page_id, используемый при инициализации виджета «Мне нравится»"/>
      <Param Name="page_url" Type="string" Default="null" Doc="url страницы, на которой установлен виджет «Мне нравится». Используется вместо параметра item_id, если при размещении виджета не был указан page_id."/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="extended" Value="false" />
    </Hardcoded>
  </Method>
  <Method Name="likes.getList" NameSuffix="Extended" Type="EntityList&lt;User&gt;" NeedToken="false" Pageable="100">
    <Doc>
      <Summary>
        Получает список идентификаторов пользователей, которые добавили заданный объект в свой список &quot;Мне нравится&quot;
      </Summary>
    </Doc>
    <Params>
      <Param Name="type" Type="string" Doc="тип объекта"/>
      <Param Name="filter" Type="string" Doc="указывает, следует ли вернуть всех пользователей, добавивших объект в список &quot;Мне нравится&quot; или только тех, которые рассказали о нем друзьям"/>
      <Param Name="friends_only" Type="bool" Doc="указывает, необходимо ли возвращать только пользователей, которые являются друзьями текущего пользователя"/>
      <Param Name="skip_own" Type="bool" Doc="не возвращать самого пользователя"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор владельца Like-объекта"/>
      <Param Name="item_id" Type="int?" Default="null" Doc="идентификатор Like-объекта. Если type равен sitepage, то параметр item_id может содержать значение параметра page_id, используемый при инициализации виджета «Мне нравится»"/>
      <Param Name="page_url" Type="string" Default="null" Doc="url страницы, на которой установлен виджет «Мне нравится». Используется вместо параметра item_id, если при размещении виджета не был указан page_id."/>
    </Params>
    <Hardcoded>
      <HardcodedParam Name="extended" Value="true" />
    </Hardcoded>
  </Method>
  <Method Name="wall.getReposts" Type="EntityListExtended&lt;Post&gt;" NeedToken="false" Pageable="100">
    <Doc>
      <Summary>
        Позволяет получать список репостов заданной записи
      </Summary>
    </Doc>
    <Params>
      <Param Name="post_id" Type="int" Doc="идентификатор записи на стене"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, на стене которого находится запись, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="wall.pin" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Закрепляет запись на стене
      </Summary>
    </Doc>
    <Params>
      <Param Name="post_id" Type="int" Doc="идентификатор записи на стене"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, на стене которого находится запись, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="wall.post" Type="WallPost" NeedToken="true" >
    <Doc>
      <Summary>
        Публикует отложенную запись на своей или чужой стене
      </Summary>
      <Returns>
        После успешного выполнения возвращает идентификатор созданной записи
      </Returns>
    </Doc>
    <Params>
      <!--todo: strong typing-->
      <Param Name="message" Type="string" Default="&quot;&quot;" Doc="текст сообщения (является обязательным, если не задан параметр attachments)" />
      <Param Name="attachments" Type="string" Default="&quot;&quot;" Doc="список объектов, приложенных к записи"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, на стене которого должна быть опубликована запись"/>
      <Param Name="from_group" Type="bool" Default="false" Doc="Опубликовать от имени группы"/>
      <Param Name="signed" Type="bool" Default="false" Doc="у записи, размещенной от имени сообщества, будет добавлена подпись"/>
      <Param Name="friends_only" Type="bool?" Default="false" Doc="запись будет доступна только друзьям"/>
      <Param Name="services" Type="string" Default="&quot;&quot;" Doc="список сервисов или сайтов, на которые необходимо экспортировать запись, в случае если пользователь настроил соответствующую опцию" />
      <Param Name="publish_date" Type="int?" Default="null" Doc="дата публикации записи в формате unixtime. Если параметр указан, публикация записи будет отложена до указанного времени."/>
      <Param Name="lat" Type="double?" Default="null" Doc="географическая широта отметки, заданная в градусах (от -90 до 90)"/>
      <Param Name="@long" Type="double?" Default="null" Doc="географическая долгота отметки, заданная в градусах (от -180 до 180)" />
      <Param Name="place_id" Type="int?" Default="null" Doc="идентификатор места, в котором отмечен пользователь"/>
    </Params>
  </Method>
  <Method Name="wall.post" Type="WallPost" NeedToken="true" >
    <Doc>
      <Summary>
        Публикует отложенную запись на своей или чужой стене
      </Summary>
      <Returns>
        После успешного выполнения возвращает идентификатор созданной записи
      </Returns>
    </Doc>
    <Params>
      <Param Name="post_id" Type="int" Doc="идентификатор записи, которую необходимо опубликовать"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, на стене которого должна быть опубликована запись"/>
    </Params>
  </Method>
  <Method Name="wall.reportComment" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Позволяет пожаловаться на комментарий к записи
      </Summary>
    </Doc>
    <Params>
      <Param Name="comment_id" Type="int" Doc="идентификатор комментария"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, которому принадлежит комментарий"/>
      <Param Name="reason" Type="ReportReason?" Default="null" Doc="причина жалобы"/>
    </Params>
  </Method>
  <Method Name="wall.reportPost" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Позволяет пожаловаться на запись.
      </Summary>
    </Doc>
    <Params>
      <Param Name="post_id" Type="int" Doc="идентификатор пользователя или сообщества, которому принадлежит запись"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, которому принадлежит запись" />
      <Param Name="reason" Type="ReportReason?" Default="null" Doc="причина жалобы"/>
    </Params>
  </Method>
  <Method Name="wall.repost" Type="RepostInfo" NeedToken="true" >
    <Doc>
      <Summary>
        Копирует объект на стену пользователя или сообщества
      </Summary>
    </Doc>
    <Params>
      <Param Name="@object" Type="string" Doc="идентификатор объекта, который необходимо разместить на стене" />
      <Param Name="message" Type="string" Default="&quot;&quot;" Doc="сопроводительный текст, который будет добавлен к записи с объектом" />
      <Param Name="group_id" Type="int?" Default="null" Doc="идентификатор сообщества, на стене которого будет размещена запись с объектом. Если не указан, запись будет размещена на стене текущего пользователя"/>
      <Param Name="@ref" Type="string" Default="&quot;&quot;"/>
    </Params>
  </Method>
  <Method Name="wall.restore" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Восстанавливает удаленную запись на стене пользователя или сообщества
      </Summary>
    </Doc>
    <Params>
      <Param Name="post_id" Type="int" Doc="идентификатор записи на стене" />
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, на стене которого находилась удаленная запись, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="wall.restoreComment" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Восстанавливает комментарий текущего пользователя к записи на своей или чужой стене
      </Summary>
    </Doc>
    <Params>
      <Param Name="comment_id" Type="int" Doc="идентификатор комментария на стене"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, на стене которого находится комментарий к записи, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
  <Method Name="wall.unpin" Type="void" NeedToken="true">
    <Doc>
      <Summary>
        Отменяет закрепление записи на стене
      </Summary>
    </Doc>
    <Params>
      <Param Name="post_id" Type="int" Doc="идентификатор записи на стене"/>
      <Param Name="owner_id" Type="int?" Default="null" Doc="идентификатор пользователя или сообщества, на стене которого находится запись, по умолчанию идентификатор текущего пользователя"/>
    </Params>
  </Method>
</ArrayOfMethod>